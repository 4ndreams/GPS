/**
 * Script para verificar la conectividad con el servidor universitario
 * Ejecuta este script para verificar que todo est√© funcionando correctamente
 */

const axios = require('axios');

const API_BASE_URL = 'http://146.83.198.35:1237/api';

async function verificarConexion() {
  console.log('üîç Verificando conectividad con el servidor universitario...');
  console.log(`üì° URL: ${API_BASE_URL}`);
  console.log('');

  try {
    // Test 1: Verificar que el servidor est√© respondiendo
    console.log('1Ô∏è‚É£ Verificando que el servidor est√© activo...');
    const response = await axios.get(API_BASE_URL, { timeout: 5000 });
    
    if (response.status === 200 && response.data.message) {
      console.log('‚úÖ Servidor respondiendo correctamente');
      console.log(`üìù Respuesta: ${response.data.message}`);
    } else {
      console.log('‚ö†Ô∏è Servidor responde pero con datos inesperados');
    }
    
    // Test 2: Verificar rutas principales
    console.log('\n2Ô∏è‚É£ Verificando rutas principales...');
    
    const rutas = [
      '/products/all',
      '/users',
      '/materiales',
      '/tipos'
    ];
    
    for (const ruta of rutas) {
      try {
        const rutaResponse = await axios.get(`${API_BASE_URL}${ruta}`, { timeout: 3000 });
        console.log(`‚úÖ ${ruta} - Status: ${rutaResponse.status}`);
      } catch (error) {
        if (error.response) {
          console.log(`‚ö†Ô∏è ${ruta} - Status: ${error.response.status} (puede requerir autenticaci√≥n)`);
        } else {
          console.log(`‚ùå ${ruta} - Error de conexi√≥n`);
        }
      }
    }
    
    console.log('\nüéâ Verificaci√≥n completada!');
    console.log('üì± Tu app m√≥vil deber√≠a poder conectarse correctamente al servidor.');
    
  } catch (error) {
    console.log('‚ùå Error de conexi√≥n al servidor');
    console.log('');
    console.log('üîç Posibles causas:');
    console.log('  - No est√°s conectado a la red universitaria');
    console.log('  - El backend no est√° ejecut√°ndose en el servidor');
    console.log('  - El puerto 1237 est√° bloqueado por firewall');
    console.log('  - Problema de configuraci√≥n del servidor');
    console.log('');
    console.log(`‚ùó Error t√©cnico: ${error.message}`);
  }
}

// Ejecutar verificaci√≥n
verificarConexion();
